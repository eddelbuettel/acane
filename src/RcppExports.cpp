// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/acane_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// create_struct_example
Rcpp::XPtr<ArrowArray> create_struct_example();
RcppExport SEXP _acane_create_struct_example() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(create_struct_example());
    return rcpp_result_gen;
END_RCPP
}
// show_array
void show_array(SEXP sxparr);
RcppExport SEXP _acane_show_array(SEXP sxparrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type sxparr(sxparrSEXP);
    show_array(sxparr);
    return R_NilValue;
END_RCPP
}
// show_schema
void show_schema(SEXP sxparr);
RcppExport SEXP _acane_show_schema(SEXP sxparrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type sxparr(sxparrSEXP);
    show_schema(sxparr);
    return R_NilValue;
END_RCPP
}
// array_xptr_set_schema
void array_xptr_set_schema(SEXP array_xptr, SEXP schema_xptr);
RcppExport SEXP _acane_array_xptr_set_schema(SEXP array_xptrSEXP, SEXP schema_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type array_xptr(array_xptrSEXP);
    Rcpp::traits::input_parameter< SEXP >::type schema_xptr(schema_xptrSEXP);
    array_xptr_set_schema(array_xptr, schema_xptr);
    return R_NilValue;
END_RCPP
}
// array_xptr_get_schema
SEXP array_xptr_get_schema(SEXP array_xptr);
RcppExport SEXP _acane_array_xptr_get_schema(SEXP array_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type array_xptr(array_xptrSEXP);
    rcpp_result_gen = Rcpp::wrap(array_xptr_get_schema(array_xptr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_acane_create_struct_example", (DL_FUNC) &_acane_create_struct_example, 0},
    {"_acane_show_array", (DL_FUNC) &_acane_show_array, 1},
    {"_acane_show_schema", (DL_FUNC) &_acane_show_schema, 1},
    {"_acane_array_xptr_set_schema", (DL_FUNC) &_acane_array_xptr_set_schema, 2},
    {"_acane_array_xptr_get_schema", (DL_FUNC) &_acane_array_xptr_get_schema, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_acane(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
